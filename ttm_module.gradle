buildscript {
    ext {
        artifactoryUrl = 'https://artifactory.trimble.tools/artifactory'
        repositoryKey = 'ttm-mobile-ecosystem-maven'
    }
    repositories {
        maven {
            url "${artifactoryUrl}/${repositoryKey}"
            credentials {
                username = "${artifactory_user}"
                password = "${artifactory_password}"
            }
        }
    }
}

// If a dependency is marked with changing = true, don't cache it
configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

publishing {
    publications {
        aar(MavenPublication) {
            groupId "com.trimble"
            version = "1.0-SNAPSHOT"
            artifactId "ttm-backbone-${project.getName()}"

            artifact("$buildDir/outputs/aar/${project.getName()}-1.0-release.aar")
        }
    }
}

artifactory {
    contextUrl = "${artifactoryUrl}"   //The base Artifactory URL if not overridden by the publisher/resolver
    resolve {
        repository {
            repoKey = "${repositoryKey}"
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = true

        }
    }

    publish {
        repository {
            repoKey = 'ttm-mobile-ecosystem-snapshot-maven'
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = true

        }

        defaults {
            publishArtifacts = true
            publications('aar')

            // Publishes everything by default so just turn off what's not desired
            publishIvy = false
        }
    }
}

android {
    defaultConfig {
        archivesBaseName = "${project.getName()}-$versionName"
    }
    signingConfigs {
        release {
            storeFile project.findProperty("keystore_path") ? rootProject.file(property("keystore_path")) : null
            storePassword project.findProperty("keystore_password")
            keyAlias project.findProperty("key_alias")
            keyPassword project.findProperty("key_password")
        }
    }
    buildTypes {
        release {
            signingConfig = signingConfigs.release
        }
    }
}